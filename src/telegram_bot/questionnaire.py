"""
–ú–æ–¥—É–ª—å –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–±–æ—Ä–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞
"""

import json
import os
import uuid
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from typing import Dict, Any

class ProjectQuestionnaire:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—à–∞–≥–æ–≤—ã–º –æ–ø—Ä–æ—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    def __init__(self):
        self.steps = [
            'files',           # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–º–µ—Ç
            'work_count',      # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –≥—Ä–∞—Ñ–∏–∫–µ
            'timeline',        # –î–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞  
            'workforce',       # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö
            'conceptualizer',  # –î–∏—Ä–µ–∫—Ç–∏–≤—ã –¥–ª—è –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
            'strategist',      # –î–∏—Ä–µ–∫—Ç–∏–≤—ã –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∞
            'accountant',      # –î–∏—Ä–µ–∫—Ç–∏–≤—ã –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞
            'foreman',         # –î–∏—Ä–µ–∫—Ç–∏–≤—ã –¥–ª—è –ø—Ä–æ—Ä–∞–±–∞
            'confirm'          # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫
        ]
    
    def get_current_step(self, context: ContextTypes.DEFAULT_TYPE) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —à–∞–≥ –æ–ø—Ä–æ—Å–∞"""
        return context.user_data.get('current_step', 'files')
    
    def next_step(self, context: ContextTypes.DEFAULT_TYPE) -> str:
        """–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É"""
        current = self.get_current_step(context)
        try:
            current_idx = self.steps.index(current)
            next_step = self.steps[current_idx + 1] if current_idx + 1 < len(self.steps) else 'confirm'
            context.user_data['current_step'] = next_step
            return next_step
        except ValueError:
            return 'files'
    
    def create_project_structure(self, user_id: int, project_id: str = None) -> str:
        """–°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞"""
        if not project_id:
            project_id = str(uuid.uuid4())[:8]
        
        project_path = f"projects/{user_id}/{project_id}"
        
        folders = [
            '0_input', '1_extracted', '2_classified', '3_prepared',
            '4_conceptualized', '5_scheduled', '6_accounted', 
            '7_staffed', '8_output'
        ]
        
        for folder in folders:
            os.makedirs(f"{project_path}/{folder}", exist_ok=True)
        
        return project_path
    
    def save_directives(self, context: ContextTypes.DEFAULT_TYPE, project_path: str):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã –≤ —Ñ–∞–π–ª"""
        directives = {
            'target_work_count': context.user_data.get('work_count', 15),
            'project_timeline': context.user_data.get('timeline', {}),
            'workforce_range': context.user_data.get('workforce', {}),
            'directives': {
                'conceptualizer': context.user_data.get('conceptualizer', ''),
                'strategist': context.user_data.get('strategist', ''), 
                'accountant': context.user_data.get('accountant', ''),
                'foreman': context.user_data.get('foreman', '')
            },
            'created_at': datetime.now().isoformat()
        }
        
        directives_path = f"{project_path}/0_input/directives.json"
        with open(directives_path, 'w', encoding='utf-8') as f:
            json.dump(directives, f, ensure_ascii=False, indent=2)
        
        return directives_path

# –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
STEP_MESSAGES = {
    'files': "üìÅ **–®–∞–≥ 1/8: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤**\n\n–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª—ã —Å–º–µ—Ç—ã (.xlsx)\n–ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å /next –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.",
    
    'work_count': "üìä **–®–∞–≥ 2/8: –†–∞–∑–º–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∞**\n\n–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –∏—Ç–æ–≥–æ–≤–æ–º –≥—Ä–∞—Ñ–∏–∫–µ\n(–Ω–∞–ø—Ä–∏–º–µ—Ä: 15)",
    
    'timeline': "üìÖ **–®–∞–≥ 3/8: –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏**\n\n–£–∫–∞–∂–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞\n–§–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì–ì–ì - –î–î.–ú–ú.–ì–ì–ì–ì\n(–Ω–∞–ø—Ä–∏–º–µ—Ä: 01.01.2024 - 30.06.2024)",
    
    'workforce': "üë∑ **–®–∞–≥ 4/8: –¢—Ä—É–¥–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã**\n\n–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ\n–ú–æ–∂–Ω–æ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 10-20) –∏–ª–∏ —Ç–æ—á–Ω–æ–µ —á–∏—Å–ª–æ",
    
    'conceptualizer': "üéØ **–®–∞–≥ 5/8: –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ä–∞–±–æ—Ç**\n\n–ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ —É–∫–∞–∑–∞–Ω–∏—è –ø–æ –ì–†–£–ü–ü–ò–†–û–í–ö–ï —Ä–∞–±–æ—Ç?\n(–ù–∞–ø—Ä–∏–º–µ—Ä: '–≤—Å—é —ç–ª–µ–∫—Ç—Ä–∏–∫—É –≤ –æ–¥–∏–Ω –±–ª–æ–∫, –∞ –ø–æ–ª—ã –Ω–µ —Ç—Ä–æ–≥–∞–π')\n\n–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /skip –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞",
    
    'strategist': "üìã **–®–∞–≥ 6/8: –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–æ–≤**\n\n–ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ —É–∫–∞–∑–∞–Ω–∏—è –ø–æ –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Æ —ç—Ç–∞–ø–æ–≤?\n(–ù–∞–ø—Ä–∏–º–µ—Ä: '—Ä–∞—Å—Ç—è–Ω–∏ –¥–µ–º–æ–Ω—Ç–∞–∂ –Ω–∞ –≤–µ—Å—å –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü')\n\n–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /skip –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞",
    
    'accountant': "üí∞ **–®–∞–≥ 7/8: –ü–æ–¥—Å—á–µ—Ç –æ–±—ä–µ–º–æ–≤**\n\n–ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ —É–∫–∞–∑–∞–Ω–∏—è –ø–æ –ü–û–î–°–ß–ï–¢–£ –æ–±—ä–µ–º–æ–≤?\n(–ù–∞–ø—Ä–∏–º–µ—Ä: '–ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ –ø–æ–ª–æ–≤ —Å—á–∏—Ç–∞–π —Ç–æ–ª—å–∫–æ –ø–ª–æ—â–∞–¥—å')\n\n–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /skip –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞",
    
    'foreman': "‚ö° **–®–∞–≥ 8/8: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª—é–¥–µ–π**\n\n–ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ —É–∫–∞–∑–∞–Ω–∏—è –ø–æ –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Æ –ª—é–¥–µ–π?\n(–ù–∞–ø—Ä–∏–º–µ—Ä: '–Ω–∞ –æ—Ç–¥–µ–ª–∫—É –∫–∏–Ω—å –º–∞–∫—Å–∏–º—É–º –ª—é–¥–µ–π')\n\n–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /skip –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞",
    
    'confirm': "‚úÖ **–ì–æ—Ç–æ–≤–æ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ!**\n\n–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã. –ù–∞–∂–º–∏—Ç–µ /process –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–º–µ—Ç—ã."
}