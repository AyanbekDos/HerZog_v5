#!/usr/bin/env python3

import asyncio
import os
from src.main_pipeline import HerzogPipeline

async def test_pipeline():
    project_path = 'projects/34975055/fdebae37'
    
    if not os.path.exists(project_path):
        print(f'‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {project_path}')
        return
    
    print(f'‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞–π–ø–ª–∞–π–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: {project_path}')
    
    pipeline = HerzogPipeline(project_path)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç—Ç–∞–ø –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ (—à–∞–≥ 4)
    print('üéØ –ó–∞–ø—É—Å–∫–∞–µ–º —ç—Ç–∞–ø –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏...')
    result = await pipeline.run_ai_agent(4)
    
    print('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:')
    print(result)
    
    if result.get('success'):
        print('‚úÖ –ö–æ–Ω—Ü–µ–ø—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    else:
        print('‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏:', result.get('error'))

if __name__ == '__main__':
    asyncio.run(test_pipeline())