#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Gemini –∫–ª–∏–µ–Ω—Ç–∞ —Å retry –ª–æ–≥–∏–∫–æ–π
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º Herzog
sys.path.append('/home/imort/Herzog_v3')

from src.shared.gemini_client import gemini_client

async def test_gemini_client():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Gemini"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Gemini –∫–ª–∏–µ–Ω—Ç–∞...")
    print(f"üìã –ú–æ–¥–µ–ª—å: {gemini_client.model.model_name}")
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    test_prompt = '''
–¢—ã - –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç. –û—Ç–≤–µ—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:

{
    "test": "ok",
    "model": "gemini-1.5-pro",
    "message": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!"
}

–î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:
- –£–∫–ª–∞–¥–∫–∞ –ø–ª–∏—Ç–∫–∏: 100 –º2
- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è: 100 –º2
'''

    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        print("\nüîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...")
        result = await gemini_client.generate_response(test_prompt)
        
        if result['success']:
            print(f"‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω!")
            print(f"üìä –¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {result['usage_metadata']['total_token_count']}")
            print(f"üéØ –ü–æ–ø—ã—Ç–∫–∞: {result.get('attempt', 1)}")
            print(f"üìÑ JSON –ø–∞—Ä—Å–∏–Ω–≥: {'—É—Å–ø–µ—à–µ–Ω' if result['json_parse_success'] else '–Ω–µ—É—Å–ø–µ—à–µ–Ω'}")
            
            if result['json_parse_success']:
                response = result['response']
                print(f"üí¨ –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: {response.get('message', '–Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
            else:
                print(f"üí¨ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç: {result['raw_text'][:200]}...")
                
        else:
            print(f"‚ùå –ó–∞–ø—Ä–æ—Å –Ω–µ—É—Å–ø–µ—à–µ–Ω: {result['error']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_gemini_client())