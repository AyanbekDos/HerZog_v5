#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ reporter_v3
"""

import sys
import os
sys.path.append('/home/imort/Herzog_v3/src')

from data_processing.reporter_v3 import MultiPageScheduleGenerator
from openpyxl import Workbook
from openpyxl.styles import Font, PatternFill, Alignment
from datetime import datetime

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
test_timeline_blocks = [
    {
        'week_id': 1,
        'start_date': '2024-01-08T00:00:00',
        'end_date': '2024-01-12T23:59:59'
    },
    {
        'week_id': 2,
        'start_date': '2024-01-15T00:00:00',
        'end_date': '2024-01-19T23:59:59'
    },
    {
        'week_id': 3,
        'start_date': '2024-01-22T00:00:00',
        'end_date': '2024-01-26T23:59:59'
    }
]

test_work_packages = [
    {
        'package_id': 'test_001',
        'name': '–¢–µ—Å—Ç–æ–≤—ã–π –ø–∞–∫–µ—Ç —Ä–∞–±–æ—Ç',
        'volume_data': {
            'final_unit': '–º2',
            'final_quantity': 100.5
        },
        'schedule_blocks': [1, 2],
        'progress_per_block': {'1': 60, '2': 40},
        'staffing_per_block': {'1': 5, '2': 3}
    }
]

test_project_info = {
    'project_name': '–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤',
    'created_at': datetime.now().isoformat()
}

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π Excel
wb = Workbook()
ws = wb.active

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
generator = MultiPageScheduleGenerator()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤...")

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
headers = [
    "‚Ññ –ø/–ø",
    "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–∏–¥–∞ —Ä–∞–±–æ—Ç",
    "–ï–¥. –∏–∑–º.",
    "–ö–æ–ª-–≤–æ",
    "–ù–∞—á–∞–ª–æ",
    "–û–∫–æ–Ω—á–∞–Ω–∏–µ",
    "–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –ø–ª–∞–Ω –ø–æ –Ω–µ–¥–µ–ª—è–º"
]

for col, header in enumerate(headers, 1):
    cell = ws.cell(row=5, column=col, value=header)
    cell.font = Font(color="FFFFFF", bold=True, size=11)
    cell.fill = PatternFill(start_color="2E4057", end_color="2E4057", fill_type="solid")
    cell.alignment = Alignment(horizontal='center', vertical='center', wrap_text=True)

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ–¥–µ–ª—å (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ)
for i, block in enumerate(test_timeline_blocks, 7):
    week_id = block['week_id']
    start_date = datetime.fromisoformat(block['start_date']).strftime('%d.%m')
    end_date = datetime.fromisoformat(block['end_date']).strftime('%d.%m')

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –≤ —è—á–µ–π–∫–µ
    cell = ws.cell(row=6, column=i, value=f"–ù–µ–¥.{week_id}\n{start_date}-{end_date}")
    cell.font = Font(size=8, bold=True)
    cell.fill = PatternFill(start_color="E3F2FD", end_color="E3F2FD", fill_type="solid")
    cell.alignment = Alignment(horizontal='center', vertical='center', wrap_text=True)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
ws.row_dimensions[6].height = 30

# –®–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫
column_widths = {
    'A': 5, 'B': 40, 'C': 8, 'D': 10, 'E': 12, 'F': 12,
    'G': 12, 'H': 12, 'I': 12
}

for col, width in column_widths.items():
    ws.column_dimensions[col].width = width

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
wb.save('/tmp/test_reporter_fix.xlsx')

print("‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: /tmp/test_reporter_fix.xlsx")
print("\n–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
print("1. –£–±—Ä–∞–Ω—ã —Å–∏–º–≤–æ–ª—ã \\n –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤")
print("2. –î–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤ —è—á–µ–π–∫–∞—Ö Excel")
print("3. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –≤—ã—Å–æ—Ç–∞ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤")
print("4. –£–¥–∞–ª–µ–Ω –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π reporter_v4.py")