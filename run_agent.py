#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã HerZog v3.0
"""

import sys
import os
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from ai_agents.agent_runner import run_agent, run_pipeline

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

def main():
    if len(sys.argv) < 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python run_agent.py <–ø—É—Ç—å_–∫_–ø—Ä–æ–µ–∫—Ç—É> <–∏–º—è_–∞–≥–µ–Ω—Ç–∞>")
        print("  python run_agent.py <–ø—É—Ç—å_–∫_–ø—Ä–æ–µ–∫—Ç—É> pipeline [start_from]")
        print()
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python run_agent.py projects/34975055/94b9a7b6 2_strategist")
        print("  python run_agent.py projects/34975055/94b9a7b6 pipeline 2_strategist")
        return 1
    
    project_dir = sys.argv[1]
    command = sys.argv[2]
    
    if not os.path.exists(project_dir):
        print(f"‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {project_dir}")
        return 1
    
    if command == "pipeline":
        # –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞
        start_from = sys.argv[3] if len(sys.argv) > 3 else "1.1_group_creator"
        print(f"üè≠ –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ {project_dir} —Å –∞–≥–µ–Ω—Ç–∞ {start_from}")
        success = run_pipeline(project_dir, start_from)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—Ö' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        return 0 if success else 1
    
    else:
        # –ó–∞–ø—É—Å–∫ –æ–¥–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
        agent_name = command
        print(f"ü§ñ –ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞ {agent_name} –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ {project_dir}")
        success = run_agent(agent_name, project_dir)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—Ö' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        return 0 if success else 1

if __name__ == "__main__":
    sys.exit(main())